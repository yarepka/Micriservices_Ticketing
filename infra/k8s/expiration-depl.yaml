# We do not need ClusterIP service, all we care is to create
# the Pod which will run the container and that thing is
# going to communicate with everything else asynchronously
# through NATS Streaming Server
apiVersion: apps/v1
kind: Deployment
metadata:
  name: expiration-depl
spec:
  # 1 pod to run
  replicas: 1
  # take a look at all Pods were created
  selector:
    # find Pods with the label app:expiration
    matchLabels:
      app: expiration
  # here we specifying the configuration of a Pod we want
  # this deployment to create
  template:
    metadata:
      # we want Pod to have the label app:expiration  
      labels:
        app: expiration
    # describing configuration options of the Pod we 
    # are about to create
    spec:
      # array of containers running inside this Pod
      containers:
        - name: expiration
          image: yarepka/expiration:latest
          # set secret variables to env
          env:
            - name: NATS_CLIENT_ID
              # we want to use pod's name and use it as a value
              # Remember we can have multiple pod's of the 
              # same service running, each of it will have
              # unique NATS_CLIENT_ID, example: 
              # expiration-depl-fc79fbdf8-5dmc5
              valueFrom: 
                fieldRef:
                  fieldPath: metadata.name
            - name: NATS_URL
              value: 'http://nats-srv:4222'
            - name: NATS_CLUSTER_ID
              value: ticketing
              # tell expiration-depl how to connect to redis
            - name: REDIS_HOST
              value: expiration-redis-srv
